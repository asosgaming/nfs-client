#!/bin/bash

NFS_MOUNTS=$(compgen -A variable|grep MOUNT_)

rpc.statd & rpcbind --

success=true

for mount in $NFS_MOUNTS
do
  index=${mount##*_}

  if [[ $mount == *"_SERVER" ]] || [[ $mount == *"_OPTIONS" ]] || [[ $mount == *"_TARGET" ]]; then continue; fi

  server="${mount}_SERVER"
  if [ "${!server}" == "" ]; then server="SERVER"; fi

  options="${mount}_OPTIONS"
  if [ "${!options}" == "" ]; then options="OPTIONS"; fi

  target="${mount}_TARGET"
  target="${!target}"

  source=${!mount}
  if [ "${target}" == "" ]; then
    target=${TARGET}${!mount}
  fi

  if [[ -n ${!mount} ]] ; then
    check=$(mount | grep " on ${target} type " | awk '{print $1;}')
    if [ "$check" != "" ]; then
      if [ "$check" == "${!server}:${source}" ]; then
        echo "mount: mounting ${!server}:${source} on ${target} success: Already mounted to $check"
        continue
      else
        echo "mount: mounting ${!server}:${source} on ${target} failed: Already mounted to $check"
        success=false
        continue
      fi
    fi

    rmdir "$target" 2>&1 &>/dev/null
    if [ -d "$target" ]; then
      echo "mount: mounting ${!server}:${source} on ${target} failed: Target already exists and is not empty"
      success=false
      continue
    fi

    mkdir -p "$target" &&
    while read -r line; do
      if [[ $line == "mount"* ]]; then
        echo "$line"
      fi
      if [[ $line == *"failed"* ]]; then success=false; fi
    done < <(mount -v -o ${!options} -t ${FS_TYPE} ${!server}:${source} ${target} 2>&1)

    check=$(mount | grep "${!server}:${source} on ${target}" | awk '{print $NF}')
    if [ "$check" != "" ]; then
      echo "mount: mounting ${!server}:${source} on ${target} success: $check"
    else
      success=false
    fi
  fi
done

if [ $success == true ]; then
  echo "mount: Successfully mounted all folders"
  while true; do sleep 1000; done;
else
  echo "mount: Failed mounting of folders"
fi
